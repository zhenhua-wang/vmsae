#+TITLE: VMSAE
#+SUBTITLE: Auto-Encoding Variational Multivariate Small Area Estimation
#+AUTHOR: Zhenhua Wang
#+SETUPFILE: ~/.emacs.d/resources/OrgFiles/LatexTemplates/zw-latex-article.setup

* Installation
Install the lastest develop version
#+begin_src ess-r :session :results output :exports both
devtools::install_github("zhenhua-wang/vmsae")
#+end_src

* Basic Usage
Load the package
#+begin_src ess-r :session :results output :exports both
library(vmsae)
#+end_src

Install the python environment
#+begin_src ess-r :session :results output :exports both
install_environment()
#+end_src

Load the python environment
#+begin_src ess-r :session :results output :exports both
load_environment()
#+end_src

Download the pretrained model
#+begin_src ess-r :session :results output :exports both
download_pretrained_vae(model_name = "mo_county", save_dir = "./datasets")
#+end_src

Train =VGMSFH= using numpyro. Note that =y= and =y_sigma= are =N= by =k= matrix, where =N= represents the number of locations and =k= is the number of response variables. =GEOID= represents FIPS codes or other equivalent identifiers. =W= is the adjacency matrix.
#+begin_src ess-r :session :results output :exports both
model <- vgmsfh_numpyro(y, y_sigma, X, W,
  GEOID = GEOID,
  model_name = "mo_county", save_dir = "./datasets",
  num_samples = 10000, num_warmup = 10000)
#+end_src

Plot the estimation result
#+begin_src ess-r :session :results output :exports both
plot(model, type = "compare")
#+end_src
[[file:inst/plot/compare.png]]

For multivariate models, we can select a response variable to plot with =var_idx=
#+begin_src ess-r :session :results output :exports both
plot(model, type = "compare", var_idx = 2)
#+end_src
[[file:inst/plot/compare2.png]]

We can also plot the mean and standard deviation of the estimation
#+begin_src ess-r :session :results output :exports both
plot(model, type = "estimate", var_idx = 1)
#+end_src
[[file:inst/plot/estimate.png]]

* Train VAE

For advanced user, the following command can be used to train your own generator for spatial random effects. The resulting VAE is saved to the folder =./model=.
#+begin_src ess-r :session :results output :exports both
loss <- train_vae(W = W,
  GEOID = GEOID,
  model_name = "mo_county",
  save_dir = "./model",
  n_samples = 10000,
  batch_size = 256,
  epoch = 10000)
#+end_src

Here, =W= is the adjacency matrix of your geography, which can be produced with =spdep= package. For example,
#+begin_src ess-r :session :results output :exports both
W <- nb2mat(poly2nb(mo_county_data), style = "B", zero.policy = TRUE)
#+end_src
